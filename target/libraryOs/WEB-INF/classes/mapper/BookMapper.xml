<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.work.dao.BookMapper" >
  <resultMap id="BaseResultMap" type="cn.work.pojo.Book" >
    <id column="bookID" property="bookid" jdbcType="INTEGER" />
    <result column="bookName" property="bookname" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="press" property="press" jdbcType="VARCHAR" />
    <result column="brief" property="brief" jdbcType="VARCHAR" />
    <result column="total" property="total" jdbcType="INTEGER" />
    <result column="left" property="left" jdbcType="INTEGER" />
    <result column="pic" property="pic" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="isbn" property="isbn" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    bookID, bookName, `type`, press, brief, total, `left`, pic, author, isbn
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.work.pojo.BookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from Book
    where bookID = #{bookid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from Book
    where bookID = #{bookid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.work.pojo.BookExample" >
    delete from Book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.work.pojo.Book" >
    insert into Book (bookID, bookName, `type`,
      press, brief, total, 
      `left`, pic, author,
      isbn)
    values (#{bookid,jdbcType=INTEGER}, #{bookname,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{press,jdbcType=VARCHAR}, #{brief,jdbcType=VARCHAR}, #{total,jdbcType=INTEGER}, 
      #{left,jdbcType=INTEGER}, #{pic,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{isbn,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.work.pojo.Book" >
    insert into Book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookid != null" >
        bookID,
      </if>
      <if test="bookname != null" >
        bookName,
      </if>
      <if test="type != null" >
        `type`,
      </if>
      <if test="press != null" >
        press,
      </if>
      <if test="brief != null" >
        brief,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="left != null" >
        `left`,
      </if>
      <if test="pic != null" >
        pic,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="isbn != null" >
        isbn,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookid != null" >
        #{bookid,jdbcType=INTEGER},
      </if>
      <if test="bookname != null" >
        #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="press != null" >
        #{press,jdbcType=VARCHAR},
      </if>
      <if test="brief != null" >
        #{brief,jdbcType=VARCHAR},
      </if>
      <if test="total != null" >
        #{total,jdbcType=INTEGER},
      </if>
      <if test="left != null" >
        #{left,jdbcType=INTEGER},
      </if>
      <if test="pic != null" >
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null" >
        #{isbn,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.work.pojo.BookExample" resultType="java.lang.Integer" >
    select count(*) from Book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update Book
    <set >
      <if test="record.bookid != null" >
        bookID = #{record.bookid,jdbcType=INTEGER},
      </if>
      <if test="record.bookname != null" >
        bookName = #{record.bookname,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        `type` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.press != null" >
        press = #{record.press,jdbcType=VARCHAR},
      </if>
      <if test="record.brief != null" >
        brief = #{record.brief,jdbcType=VARCHAR},
      </if>
      <if test="record.total != null" >
        total = #{record.total,jdbcType=INTEGER},
      </if>
      <if test="record.left != null" >
        `left` = #{record.left,jdbcType=INTEGER},
      </if>
      <if test="record.pic != null" >
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null" >
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.isbn != null" >
        isbn = #{record.isbn,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update Book
    set bookID = #{record.bookid,jdbcType=INTEGER},
      bookName = #{record.bookname,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=VARCHAR},
      press = #{record.press,jdbcType=VARCHAR},
      brief = #{record.brief,jdbcType=VARCHAR},
      total = #{record.total,jdbcType=INTEGER},
      `left` = #{record.left,jdbcType=INTEGER},
      pic = #{record.pic,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      isbn = #{record.isbn,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.work.pojo.Book" >
    update Book
    <set >
      <if test="bookname != null" >
        bookName = #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="press != null" >
        press = #{press,jdbcType=VARCHAR},
      </if>
      <if test="brief != null" >
        brief = #{brief,jdbcType=VARCHAR},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=INTEGER},
      </if>
      <if test="left != null" >
        `left` = #{left,jdbcType=INTEGER},
      </if>
      <if test="pic != null" >
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null" >
        isbn = #{isbn,jdbcType=VARCHAR},
      </if>
    </set>
    where bookID = #{bookid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.work.pojo.Book" >
    update Book
    set bookName = #{bookname,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      press = #{press,jdbcType=VARCHAR},
      brief = #{brief,jdbcType=VARCHAR},
      total = #{total,jdbcType=INTEGER},
      `left` = #{left,jdbcType=INTEGER},
      pic = #{pic,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      isbn = #{isbn,jdbcType=VARCHAR}
    where bookID = #{bookid,jdbcType=INTEGER}
  </update>
  <select id="getBook" resultType="cn.work.pojo.BookExt" parameterType="java.lang.Integer" >
    select *
    from Book,Bookloc
    where book.bookID = #{id} and book.bookid=bookloc.bookid
  </select>
</mapper>